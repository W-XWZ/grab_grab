function matchConditionByVariety(current_priority, v){
	
	let balQty = v['balQty'];
	//防止异常情况
	if(!balQty){
		balQty = 1;
	}

	let w_id = v['whId'] == null ? "" : v['whId'] ;
	let make_date = v['makeDate'] == null ? "":v['makeDate'] ;
	//硅铁专用：等级
	let levId = v['levId'] == null ? "":v['levId'];
	
	//支持多仓库 多个仓库用逗号进行分割
	if(matchWarehouse(current_priority, w_id)){
		return true;
	}
	if(matchMakeDate(current_priority, make_date)){
		return true;
	}
	
	if (current_priority['level'] != '' && !!current_priority['level']) {
		let level_match = false;
		let level_array = current_priority['level'].split(",");
		for (let level_index = 0; level_index < level_array.length; level_index++) {
			let level_compare = level_array[level_index].trim();
			if (levId == level_compare) {
				level_match = true;
				break;
			}
		}
		if (!level_match) {
			return true;
		}
	}
	
}


function loadupDisplayCondition(item, q) {
		let match = "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;优先度" + q;
		
		let warehouse = item[q]["warehouse"];
		let make_date = item[q]["make_date"];
		let level = item[q]["level"];
		match += "仓库: " + warehouse + "年份: " + make_date + "等级:" + level;
		return match;
}

function conditionPanelInnerHtml(priorInfo, i){
	let innerHTML = `优先度` + i + `:
				<input class = "condition-input" id="warehouse_` +
					i + `" placeholder="仓库" type="text" style='width:100px' value = "` + priorInfo['warehouse'] +
					`"/> 
				<input class = "condition-input" id="make_date_` +
					i + `" placeholder="年份" type="text" style='width:100px' value = "` + priorInfo['make_date'] +
					`"/> 
				<input class = "condition-input" id="level_` +
					i +
					`" type="text" placeholder="等级" style='width:100px' value = "` + priorInfo['level'] +
					`"/> </br>
					`;
	return innerHTML;
}

function addConditionPanelHtml(editPriorNum){
	let innerHTML = `
				优先度` + editPriorNum + `:
			<input class = "condition-input" id="district_` + editPriorNum +
			`" placeholder="产地" type="text" style='width:100px'/> 
			<input class = "condition-input" id="warehouse_` +
			editPriorNum +
			`" placeholder="仓库" type="text" style='width:100px'/> 
			<input class = "condition-input" id="make_date_` +
			editPriorNum +
			`" placeholder="年份" type="text" style='width:100px'/> 
			<input class = "condition-input" id="premium_rise_lower_limit_` +
			editPriorNum +
			`" type="number" placeholder="升贴水下限" style='width:100px'/>
		<input class = "condition-input" id="premium_rise_upper_limit_` +
			editPriorNum + `" type="number" placeholder="升贴水上限" style='width:100px'/>
		</br>
		`;
	return innerHTML;
}

function getParam(variety, commodity_id, round_number){
	let param = {};
	param.classId = variety;
	param.commodityId = commodity_id;
	param.pageIndex = 1;
	param.pageSize = 10000;
	param.settleType = "";
	param.roundId=round_number;

	param.formDefine=JSON.parse("{\"formDefineId\": 10032,\"formId\": \"selection_query_condition\",\"formAttrDefines\": [{\"attrId\": 2282,\"formAttrDefineId\": 3048,\"name\": \"WH_ID\",\"bizName\": \"whId\",\"value\": null},{\"attrId\": 2283,\"formAttrDefineId\": 3049,\"name\": \"MAKE_DATE\",\"bizName\": \"makeDate\",\"value\": null},{\"attrId\": 26,\"formAttrDefineId\": 3050,\"name\": \"PLACE_NAME\",\"bizName\": \"placeName\",\"value\": null},{\"attrId\": 2279,\"formAttrDefineId\": 3051,\"name\": \"LEV_ID\",\"bizName\": \"levId\",\"value\": null}]}")

	return param;
}


//保存输入的条件
	function makeConditionStore(i, condition){
		let warehouse = $('#warehouse_' + i).val();
		let make_date = $('#make_date_' + i).val();
		
		let level = $('#level_' + i).val();
		condition[i] = {
			//"district": district,
			"warehouse": warehouse,
			"make_date": make_date,
			"level": level,
			"condition_num": window.localStorage['condition_num']
		}
	}
	
	//根据选中品种展示条件列表
	function displayConditionList(tempNum){
		let innerHTML = `
					优先度` + tempNum + `:
				<input class = "condition-input" id="warehouse_` +
				tempNum +
				`" placeholder="仓库" type="text" style='width:100px'/> 
				<input class = "condition-input" id="make_date_` +
				tempNum +
				`" placeholder="年份" type="text" style='width:100px'/> 
				<input class = "condition-input" id="level_` +
				tempNum +
				`" placeholder="等级" type="text" style='width:100px'/> 
				</br>
			`;
		return innerHTML;
	}
	function displayWarehouseTable(){
			let innerHTML =
				`
			<tr class ="tr-header">
			<td class = "cus-td" >序号</td>
			<td class = "cus-td" style="width: 140px;">仓单编号</td>
			<td class = "cus-td">请求编号</td>
			<td class = "cus-td">产地</td>
			<td class = "cus-td">仓库</td>
			<td class = "cus-td">年份</td>
			<td class = "cus-td">数量</td>
			<td class = "cus-td">等级</td>
			<td class = "cus-td">满足优先级</td>
			<td class = "cus-td">抢单情况</td>
		</tr>
			`;
				return innerHTML;
		}
	function displayWareHouseValue(item, id, result){
			let cash = null == item['agio'] ? '-': item['agio']
		let placeName = null == item['placeName'] ? '-' : item['placeName'];
		let makeDate = null == item['makeDate'] ? '-' : item['makeDate'];
		let levId = null == item['levId'] ? '-' : item['levId'];
		let whId = null == item['whId'] ? '-' : item['whId'];
		let spcId = null == item['spcId'] ? '-' : item['spcId'];
		let innerHTML =  `
				<td class = "cus-td">` + (id + 1 ) + `</td>
				<td class = "cus-td">` + spcId + `</td>
				<td class = "cus-td">` + item['settleReqId'] + `</td>
				<td class = "cus-td">` + placeName + `</td>
				<td class = "cus-td">` + whId + `</td>
				<td class = "cus-td">` + makeDate + `</td>
				<td class = "cus-td">` + item['balQty'] + `</td>
				<td class = "cus-td">` + levId + `</td>
				<td class = "cus-td">` + item['priority_num'] + `</td>
				<td class = "cus-td">` + result + `</td>`;
		return innerHTML;
	}
export  {matchConditionByVariety,loadupDisplayCondition, conditionPanelInnerHtml, addConditionPanelHtml,getParam, makeConditionStore, displayConditionList, displayWarehouseTable,displayWareHouseValue}